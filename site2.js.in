/* The rest of this code is from Darrick. */
function crib_toggle(id, show)
{
	var x = $('#' + id);
	if (typeof(show) === 'undefined')
		show = (x.css('display') == 'none');
	var y = $('#' + id + "_ctl");
	if (show) {
		x.css('display', 'table-row');
		y.text('▼');
	} else {
		x.css('display', '');
		y.text('▶');
	}
}

function crib_ready()
{
	var x = location.hash;
	x = x.replace(/^#dance_/, "crib_");
	if ($('#' + x).length)
		crib_toggle(x);
}

function crib_toggle_all(show)
{
	$('tr[id ^= "crib_"]').each(function(a,b) {crib_toggle(b.id, show);});
}

function decryptEmailAddr(addr)
{
	var x = addr.replace(/ at /g, "@");
	x = x.replace(/ dot /g, ".");
	x = x.replace(/%20at%20/g, "@");
	x = x.replace(/%20dot%20/g, ".");
	return x;
}

function fixEmailAddrs()
{
	$('.email').each(function (idx) {$(this).text(decryptEmailAddr($(this).text()));});
	$('.link_email').each(function (idx) {$(this).attr('href', decryptEmailAddr($(this).attr('href')));});
}
$(document).ready(fixEmailAddrs);

function createNewSlides(element)
{
	%SLIDE_DATA%

	var sc = $(element);
	for (idx in slides) {
		var slide = slides[idx];
		if (slide.stop)
			break;

		var i = new Image().src = slide.img;
		var s = $('<div>');
		s.addClass('slidesjs_slide');
		var t = $('<div>');
		t.addClass('slidesjs_linkbackground');
		s.append(t);
		url = "url('" + slide.img + "')";
		s.css('background-image', url);
		sc.append(s);

		var c = $('<div>');
		c.addClass('slidesjs_caption');
		if (slide.caption_orientation.length > 0) {
			c.addClass('slidesjs_caption_' + slide.caption_orientation);
		} else {
			c.addClass('slidesjs_caption_bottom_left');
		}
		x = '<div class="slidesjs_caption_title">' + slide.caption + '</div><div class="slidesjs_longdescr">' + slide.longdescr + '</div>';
		if (slide.url.length > 0) {
			var l = $('<a>' + x + ' [<span>More</span>]</a>');
			l.attr('href', slide.url);
			c.append(l);
		} else {
			c.append(x);
		}
		s.append(c);
	}
}

function slideshow_key(evt) {
	if (evt.altKey || evt.ctrlKey || evt.metaKey || evt.shiftKey)
		return;

	if (evt.keyCode == 39) {
		/* right arrow */
		$('.slidesjs-next').click()
		evt.preventDefault();
	} else if (evt.keyCode == 37) {
		/* left arrow */
		$('.slidesjs-previous').click()
		evt.preventDefault();
	}
	// allow event to propagate
}

function load_new_main()
{
	createNewSlides("#slidesjs_slides");
	$('#slidesjs_slides').slidesjs({
		navigation: {
			effect: "fade"
		},
		pagination: {
			effect: "fade"
		},
		play: {
			active: false,
			auto: true,
			interval: 30000,
			swap: true,
			effect: "fade",
			pauseOnHover: true,
			restartDelay: 30000
		},
		effect: {
			fade: {
				speed: 1000
			}
		}
	});
	$(window).keydown(slideshow_key);
}

/* General form */
function set_form_errors(errors, form_elt, form_description)
{
	/* An empty error list means we pass validation! */
	/* A null list means we just want to hide the bubble. */
	if (errors == null || errors.length == 0) {
		$('#' + form_elt + ' #errors').css('display', 'none');
		if (errors != null)
			$('#' + form_elt + ' input[type = "submit"]').removeAttr('disabled');
	} else {
		var caption = 'Before we can process the ' + form_description + ' form,';
		var list = $('<ul>');
		for (var idx in errors) {
			var item = $('<li>');
			item.text(errors[idx]);
			list.append(item);
		}
		$('#' + form_elt + ' #errors').empty();
		$('#' + form_elt + ' #errors').text(caption);
		$('#' + form_elt + ' #errors').append(list);
		$('#' + form_elt + ' #errors').css('display', 'block');
		$('#' + form_elt + ' input[type = "submit"]').attr('disabled', 'disabled');
	}
}

/* Membership form */
function verify_membership_form()
{
	var errors = [];

	if ($('#membership_form #name').val().length == 0) {
		errors.push('Please provide your name.');
	}

	var s = $('#membership_form #children').val();
	if (s.length > 0 && isNaN(parseInt(s))) {
		errors.push('Please provide the number of children in your family, or leave the field blank.');
	}

	if ($('#membership_form #address').val().length == 0) {
		errors.push('Please provide your address.');
	}

	s = $('#membership_form #email').val();
	if ((s.length > 0 || $('#membership_form #email_list').prop('checked'))
	    && s.match(/@.*\...$/) == null) {
		errors.push('Please provide a valid e-mail address.');
	}

	if (!$('#membership_form #type_single').prop('checked') &&
	    !$('#membership_form #type_family').prop('checked') &&
	    !$('#membership_form #type_local').prop('checked')) {
		errors.push('Please select a membership type.');
	}

	if (!$('#membership_form #org').prop('checked')) {
		errors.push('Please check yes to the question about Scottish Dance being fun.');
	}

	set_form_errors(errors, 'membership_form', 'membership');
}

function setup_membership_form()
{
	$('#membership_form input').keyup(verify_membership_form);
	$('#membership_form input').change(verify_membership_form);
	$('#membership_form').bind('reset', function() {set_form_errors(null, 'membership_form', 'membership');});
}

/* Workshop registration form */
var WORKSHOP_FORM_ITEMS = {
	all_member_early: 50,
	all_member_late: 60,
	all_nonmember_early: 55,
	all_nonmember_late: 65,
	workshop_member_early: 30,
	workshop_member_late: 40,
	workshop_nonmember_early: 35,
	workshop_nonmember_late: 45,
	ball_member_early: 30,
	ball_member_late: 40,
	ball_nonmember_early: 35,
	ball_nonmember_late: 45,
	ball_spectator: 5,
	lunch_guest: 7
};

function calculate_workshop_total()
{
	var total = 0;
	var total_units = 0;

	for (var idx in WORKSHOP_FORM_ITEMS) {
		var unit_price = WORKSHOP_FORM_ITEMS[idx];
		var units;
		units = parseInt($('#' + idx).val());
		if (isNaN(units)) {
			units = 0;
		}
		total_units += units;
		total += units * unit_price;
	}

	var x = '';
	if (total > 0) {
		x = '$' + total;
	}
	$('#workshop_form #total').val(x);
	$('#workshop_form #total_hidden').val(x);

	return total_units;
}

function verify_workshop_form()
{
	var errors = [];
	var dancers = 1;

	total_units = calculate_workshop_total();

	if ($('#workshop_form #name1').val().length == 0) {
		errors.push('First dancer: Please provide your name.');
	}

	if (!$('#workshop_form #class1_beginner').prop('checked') &&
	    !$('#workshop_form #class1_intermediate').prop('checked')) {
		errors.push('First dancer: Please select a class level.');
	}

	var s = $('#workshop_form #years1').val();
	if (s.length == 0 || isNaN(parseInt(s))) {
		errors.push('First dancer: Please provide the number of years you\'ve been dancing Scottish dances.');
	}

	var num_dancers = $('#workshop_form #num_dancers').val();
	for (i = 2; i <= num_dancers; i++) {
		if ($('#workshop_form #name' + i).length < 1 ||
		    $('#workshop_form #name' + i).val().length < 1)
			continue;

		dancers++;
		if (!$('#workshop_form #class' + i + '_beginner').prop('checked') &&
		    !$('#workshop_form #class' + i + '_intermediate').prop('checked')) {
			errors.push('Dancer #' + i + ': Please select a class level.');
		}

		var s = $('#workshop_form #years' + i).val();
		if (s.length == 0 || isNaN(parseInt(s))) {
			errors.push('Dancer #' + i +': Please provide the number of years you\'ve been dancing Scottish dances.');
		}
	}

	if (total_units != dancers) {
		errors.push('There is a discrepancy between the length of ' +
			'the list of participants (' + dancers + ') and the ' +
			'number of packages (' + total_units + ') you\'ve selected.');
	}

	if ($('#workshop_form #address').val().length == 0) {
		errors.push('Please provide your address.');
	}

	s = $('#workshop_form #email').val();
	if (s.length > 0 && s.match(/@.*\./) == null) {
		errors.push('Please provide a valid e-mail address.');
	}

	if ($('#workshop_form #total').val().length == 0) {
		errors.push('Please write in your selection of registration packages.');
	}

	if (!$('#workshop_form #org').prop('checked')) {
		errors.push('Please check yes to the question about Scottish Dance being fun.');
	}

	set_form_errors(errors, 'workshop_form', 'workshop registration');
}

function setup_workshop_form()
{
	for (var idx in WORKSHOP_FORM_ITEMS) {
		$('#workshop_form #' + idx + '_price').html(WORKSHOP_FORM_ITEMS[idx]);
	}

	$('#workshop_form input').keyup(verify_workshop_form);
	$('#workshop_form input').change(verify_workshop_form);
	$('#workshop_form').bind('reset', function() {set_form_errors(null, 'workshop_form', 'workshop registration');});
	$('#workshop_form #num_dancers').val(1);
}

function workshop_add_dancer()
{
	var num_dancers = $('#workshop_form #num_dancers').val();
	num_dancers++;
	$('#workshop_form #num_dancers').val(num_dancers);

	var r1 = $('<tr><td>&nbsp;</td></tr>');

	var r2 = $('<tr>');
	var r2c1 = $('<td><label for="name' + num_dancers + '">Name:</label></td>');
	r2.append(r2c1);
	var r2c2 = $('<td colspan="3"><input type="text" class="text" id="name' + num_dancers + '" name="name' + num_dancers + '"/></td>');
	r2.append(r2c2);

	var r3 = $('<tr>');
	var r3c1 = $('<td><label for="class' + num_dancers + '">Class Level:</label></td>');
	r3.append(r3c1);
	var r3c2 = $('<td>')
	var r3c2s1 = $('<span class="nowrap"><input type="radio" name="class' + num_dancers + '" id="class' + num_dancers + '_beginner" value="beginner"/> <label for="class' + num_dancers + '_beginner">Beginner</label></span>');
	r3c2.append(r3c2s1);
	r3c2.append("\n");
	var r3c2s2 = $('<span class="nowrap"><input type="radio" name="class' + num_dancers + '" id="class' + num_dancers + '_intermediate" value="intermediate"/> <label for="class' + num_dancers + '_intermediate">Intermediate</label></span>');
	r3c2.append(r3c2s2);
	r3.append(r3c2);
	var r3c3 = $('<td><label for="years' + num_dancers + '">Years Experience:</label></td>');
	r3.append(r3c3);
	var r3c4 = $('<td><input type="number" class="text" id="years' + num_dancers + '" name="years' + num_dancers + '"/></td>');
	r3.append(r3c4);

	$('#workshop_form .add_dancer_row').before(r1);
	$('#workshop_form .add_dancer_row').before(r2);
	$('#workshop_form .add_dancer_row').before(r3);
	$('#workshop_form input').unbind('keyup');
	$('#workshop_form input').keyup(verify_workshop_form);
	$('#workshop_form input').unbind('change');
	$('#workshop_form input').change(verify_workshop_form);
}
