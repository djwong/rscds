/* The rest of this code is from Darrick. */
function crib_toggle(id)
{
	var x = document.getElementById(id);
	var y = document.getElementById(id + "_ctl");
	if (x.style.display == "") {
		/* work around a bug in ie6/7. */
		try {
			x.style.display = "table-row";
		} catch(e) {
			x.style.display = "block";
		}
		y.innerHTML = "&#9660;";
	} else {
		x.style.display = "";
		y.innerHTML = "&#9654;";
	}
}

function addEventHandler(node, eventName, lambda)
{
	var cookie = {node: node, event: eventName, func: lambda};
	if (node.addEventListener)
		node.addEventListener(eventName, lambda, false);
	else if (node.attachEvent)
		node.attachEvent("on" + eventName, lambda);
	return cookie;
}
function addWindowEventHandler(eventName, lambda)
{
	return addEventHandler(window, eventName, lambda);
}

function getIEVersion() {
	var rv = -1; // Return value assumes failure.

	if (navigator.appName == 'Microsoft Internet Explorer') {
		var ua = navigator.userAgent;
		var re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
		if (re.exec(ua) != null)
			rv = parseFloat(RegExp.$1);
	}

    return rv;
}

function decryptEmailAddr(addr)
{
	var x = addr.replace(/ at /g, "@");
	x = x.replace(/ dot /g, ".");
	x = x.replace(/%20at%20/g, "@");
	x = x.replace(/%20dot%20/g, ".");
	return x;
}

function fixEmailAddrs()
{
	$('.email').each(function (idx) {$(this).text(decryptEmailAddr($(this).text()));});
	$('.link_email').each(function (idx) {$(this).attr('href', decryptEmailAddr($(this).attr('href')));});
}

function Slider(element, classname, displayStyle, interval)
{
	children = element.children;

	this.element = element;
	this.current = -1;
	this.layers = new Array();
	this.displayStyle = displayStyle;
	this.interval = interval;
	this.autoNext = null;

	for (l = 0; l < children.length; l++) {
		if (children[l].className == classname) {
			this.layers.push(children[l]);
		}
	}

	for (l = 0; l < this.layers.length; l++) {
		if (this.current < 0 && this.layers[l].style.display == this.displayStyle) {
			this.current = l;
		}
	}

	if (this.current < 0) {
		this.current = 0;
		this.layers[0].style.display = this.displayStyle;
	}

	/* Stupid hack: IE8 and below can't handle our nice Unicode. */
	var useUnicode = true;
	var ie = getIEVersion();
	if (ie >= 0 && ie <= 8.0)
		useUnicode = false;

	var that = this;
	var prevBtn = document.createElement("a");
	prevBtn.className = "ss_previous ss_nav";
	prevBtn.innerHTML = "&#9664;";
	if (!useUnicode)
		prevBtn.innerHTML = "&lt;";
	prevBtn.onclick = function() {that.previous();};
	this.element.appendChild(prevBtn);

	var nextBtn = document.createElement("a");
	nextBtn.className = "ss_next ss_nav";
	nextBtn.innerHTML = "&#9654;";
	if (!useUnicode)
		nextBtn.innerHTML = "&gt;";
	nextBtn.onclick = function() {that.next();};
	this.element.appendChild(nextBtn);

	if (this.interval)
		this.autoNext = setInterval(function() {that._next();}, this.interval);
}

Slider.prototype._next = function()
{
	c = this.current + 1;
	if (c >= this.layers.length)
		c = 0;
	this.slideTo(c);
}

Slider.prototype.next = function()
{
	this._next();
	if (this.autoNext)
		clearInterval(this.autoNext);
	if (this.interval) {
		var that = this;
		this.autoNext = setInterval(function() {that._next();}, this.interval);
	}
}

Slider.prototype.previous = function()
{
	c = this.current - 1;
	if (c < 0)
		c = this.layers.length - 1;
	this.slideTo(c);
	if (this.autoNext)
		clearInterval(this.autoNext);
	if (this.interval) {
		var that = this;
		this.autoNext = setInterval(function() {that._next();}, this.interval);
	}
}

Slider.prototype.slideTo = function(c)
{
	var that = this;
	this.layers[c].style.display = this.displayStyle;
	this.layers[this.current].style.display = "none";
	this.current = c;
}

function resizer()
{
	var win_width;
	if (typeof(window.innerWidth) != "undefined")
		win_width = window.innerWidth;
	else if (typeof(document.documentElement.offsetWidth) != "undefined")
		win_width = document.documentElement.offsetWidth;
	else if (typeof(document.body.offsetWidth) != "undefined")
		win_width = document.body.offsetWidth;

	var height = Math.floor(win_width / 1.82);
	if (height > 577)
		height = 577;
	$('.slide').each(function (idx) {$(this).css('height', height + 'px');});
}

function createNewSlides(element)
{
	%SLIDE_DATA%

	var sc = $(element);
	for (idx in slides) {
		var slide = slides[idx];
		if (slide.stop)
			break;

		var s = $('<div>');
		s.addClass('slidesjs_slide');
		url = "url('" + slide.img + "')";
		s.css('background-image', url);
		sc.append(s);

		var c = $('<div>');
		c.addClass('slidesjs_caption');
		if (slide.url.length > 0) {
			var l = $('<a>');
			l.attr('href', slide.url);
			l.text(slide.caption);
			c.append(l);
		} else {
			c.text(slide.caption);
		}
		s.append(c);
	}
}

function createSlides(element)
{
	%SLIDE_DATA%

	var hiddenSlideDiv = document.createElement("div");
	hiddenSlideDiv.id = "hidden_slides";
	document.getElementById("pictures").appendChild(hiddenSlideDiv);

	for (var l = 0; l < slides.length - 1; l++) {
		var img = document.createElement("img");
		img.src = slides[l].img;
		img.style.width = "1px";
		img.style.height = "1px";
		hiddenSlideDiv.appendChild(img);

		var slideDiv = document.createElement("div");
		slideDiv.className = "slide";
		imgurl = "url('" + slides[l].img + "')";
		slideDiv.style.backgroundImage = imgurl;

		if (slides[l].url.length > 0) {
			var linkSpan = document.createElement("span");
			linkSpan.appendChild(document.createTextNode("More"));

			var captionLink = document.createElement("a");
			captionLink.className = "slide_caption";
			captionLink.href = slides[l].url;
			captionLink.appendChild(document.createTextNode(slides[l].caption + " ["));
			captionLink.appendChild(linkSpan);
			captionLink.appendChild(document.createTextNode("]"));
			slideDiv.appendChild(captionLink);
		} else {
			var caption = document.createElement("span");
			caption.className = "slide_caption";
			caption.appendChild(document.createTextNode(slides[l].caption));
			slideDiv.appendChild(caption);
		}

		var itemDiv = document.createElement("div");
		itemDiv.className = "ss_item";

		itemDiv.appendChild(slideDiv);
		element.appendChild(itemDiv);
	}
}

function slideshow_key(evt, slider) {
	if (evt.keyCode == 39) {
		/* right arrow */
		slider.next();
		return true;
	} else if (evt.keyCode == 37) {
		/* left arrow */
		slider.previous();
		return true;
	}
	return false;
}

var slider = null;
function load_main()
{
	createSlides(document.getElementById("ss_cont"));
	resizer();
	slider = new Slider(document.getElementById("ss_cont"), "ss_item", "block", 15000);
	addEventHandler(window, "resize", resizer);
	addEventHandler(window, "keydown", function(evt) {slideshow_key(evt, slider);});
	fixEmailAddrs();
}

function load_new_main()
{
	createNewSlides("#slidesjs_slides");
	$(function() {
		$('#slidesjs_slides').slidesjs({
			navigation: {
				effect: "fade"
			},
			pagination: {
				effect: "fade"
			},
			play: {
				active: false,
				auto: true,
				interval: 5000,
				swap: true,
				effect: "fade",
				pauseOnHover: true,
				restartDelay: 5000
			},
			effect: {
				fade: {
					speed: 1000
				}
			}
		});
	});
}

function load_standard()
{
	fixEmailAddrs();
}
addWindowEventHandler("load", load_standard);
